@page "/district/{lb}"

@using System.Collections;
@using SmICSCoreLib.StatistikDataModels
@using SmICSCoreLib.StatistikServices

@inject RkiService rkiService
@inject IJSRuntime JS

<h3>Statistik (Prototyp)</h3>

<div class="card">
    <div class="row">
        <StatistikNav>
        </StatistikNav>

        <div class="card-body col-10">
            <div style="padding: 0px 0px 100px 0px;">
                @if (@standAktuell == false)
                {
                    <p><em>Daten werden geladen...</em></p>
                    <div class="spinner"></div>
                }
                else
                {
                    <div class="row">
                        <div class="col-6">
                            <div class="row">
                                <div class="col-md-3 col-xxl-3 d-flex">
                                    <div class="card flex-fill">
                                        <div class="card-header" id="head-info">
                                            <h6 class="card-title"> COVID-19-Fälle </h6>
                                        </div>
                                        <div class="card-body" id="body-info">
                                            <span class="h5 d-inline-block mt-1 mb-3">@fallzahl</span>
                                            <p class="mb-2">+ @fallzahlVortag</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3 col-xxl-3 d-flex">
                                    <div class="card flex-fill">
                                        <div class="card-header" id="head-info">
                                            <h6 class="card-title"> COVID-19-Todesfälle </h6>
                                        </div>
                                        <div class="card-body" id="body-info">
                                            <span class="h5 d-inline-block mt-1 mb-3">@todesfaelle</span>
                                            <p class="mb-2">+ @todesfaelleVortag</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3 col-xxl-3 d-flex">
                                    <div class="card flex-fill">
                                        <div class="card-header" id="head-info" style="background-color: @inzidenzColor">
                                            <h6 class="card-title">  7-Tage-Inzidenz  </h6>
                                        </div>
                                        <div class="card-body" id="body-info">
                                            <span class="h5 d-inline-block mt-1 mb-3">@inzidenz7Tage</span>
                                            <p class="mb-2"> @inzidenz7TageVortag</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3 col-xxl-3 d-flex">
                                    <div class="card flex-fill">
                                        <div class="card-header" id="head-info" style="background-color: @rWertColor">
                                            <h6 class="card-title">  7-Tage-R-Wert </h6>
                                        </div>
                                        <div class="card-body" id="body-info">
                                            <span class="h5 d-inline-block mt-1 mb-3">@rWert7Tage</span>
                                            <p class="mb-2">@rWert7TageVortag</p>

                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">

                            </div>
                        </div>

                        <div class="col-6">

                        </div>
                    </div>
                    <br>

                    <div class="row">
                        @if (@blStandAktuell == false)
                        {
                            <div class="row" style=" display: inline-block; margin: 0px 0px 0px 40px">
                                <div class="row">
                                    <p><em>weitere Daten stehen derzeit nicht verfügung!</em></p>
                                </div>
                                <div class="row">
                                    <button class="btn btn-primary" @onclick="GetLastReport"> Daten von Vortag laden </button>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col-10 d-flex">
                                <div class="card flex-fill">
                                    <div class="card-header">
                                        <div class="row">
                                            <div class="col-8">
                                                <h6 class="card-title"> Landkreise @lb </h6>
                                            </div>
                                            <div class="col-4">
                                                <ul class="pagination" style="justify-content: flex-end;">
                                                    <li class="paginate_button page-item next">
                                                        <a href="/state" class="page-link"> Zurück zur Hauptansicht</a>
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="card-body">
                                        <p>Datenstand @stand</p>
                                        <div class="tableFixHead">
                                            <table class="table table-bordered table-hover mb-0">
                                                <thead>
                                                    <tr>
                                                        <th scope="col">Landkreis</th>
                                                        <th scope="col">Stadt</th>
                                                        <th scope="col">Gesamt Fälle</th>
                                                        <th scope="col">Fälle letzte 7 Tage</th>
                                                        <th scope="col">Fälle pro 100000 EW</th>
                                                        <th scope="col">7-Tage-Inzi­denz</th>
                                                        <th scope="col">Gesamt Todes­fälle</th>
                                                        <th scope="col">Todesfälle letzte 7 Tage</th>
                                                    </tr>
                                                </thead>
                                                <tbody>

                                                    @foreach (var district in lkArray)
                                                    {
                                                        <tr>
                                                            <td scope="row">@district.LandkreisName</td>
                                                            <td>@district.Stadt</td>
                                                            <td>@district.FallzahlGesamt</td>
                                                            <td>@district.Faelle7Lk</td>
                                                            <td>@district.FaellePro100000Ew</td>
                                                            <td>@district.Inzidenz7Tage</td>
                                                            <td>@district.Todesfaelle</td>
                                                            <td>@district.Todesfaelle7Lk</td>
                                                        </tr>
                                                    }

                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <br>

                    <div class="row">

                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private DateTime datum = DateTime.Now;
    private DailyReport dailyReport = new DailyReport();
    private DailyReport lastReport = new DailyReport();
    private bool standAktuell;
    private bool blStandAktuell;
    private string rWert7Tage;
    private string rWert7TageVortag;
    private string inzidenz7Tage;
    private string inzidenz7TageVortag;
    private string stand;
    private string fallzahl;
    private int fallzahlVortag;
    private string todesfaelle;
    private int todesfaelleVortag;
    private Bundesland[] bundeslaender = new Bundesland[16];
    private Bundesland[] lastBundeslaender = new Bundesland[16];
    private string inzidenzColor;
    private string rWertColor;
    private List<string> farbe = new List<string>();
    private ArrayList landkreise = new ArrayList();
    private Landkreis[] lkArray;
    private Landkreis[] lkArrayLast;
    private string path;
    private string pathLastDay;

    [Parameter]
    public string lb { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(GetRKIData);
    }

    private void GetRKIData()
    {
        try
        {
            path = @"../SmICSWebApp/Resources/statistik/json/" + DateTime.Now.ToString("yyyy-MM-dd") + ".json";
            dailyReport = rkiService.DeserializeRkiData(path);
            stand = dailyReport.Bericht.Stand;
            rWert7Tage = dailyReport.Bericht.RWert7Tage;
            rWert7TageVortag = dailyReport.Bericht.RWert7TageVortag;
            standAktuell = dailyReport.Bericht.StandAktuell;
            blStandAktuell = dailyReport.Bericht.BlStandAktuell;

            bundeslaender = dailyReport.Bericht.Bundesland;
            foreach (var bundesland in bundeslaender)
            {
                if (bundesland.BlAttribute.Bundesland == lb)
                {
                    fallzahl = bundesland.BlAttribute.FallzahlGesamt;
                    todesfaelle = bundesland.BlAttribute.Todesfaelle;
                    inzidenz7Tage = bundesland.BlAttribute.Inzidenz7Tage;
                    lkArray = bundesland.Landkreise;
                }
            }

            foreach (var bundesland in bundeslaender)
            {
                farbe.Add(bundesland.BlAttribute.Farbe);
            }

            pathLastDay = @"../SmICSWebApp/Resources/statistik/json/" + DateTime.Now.AddDays(-1).ToString("yyyy-MM-dd") + ".json";
            lastReport = rkiService.DeserializeRkiData(pathLastDay);
            if (lastReport != null)
            {
                lastBundeslaender = lastReport.Bericht.Bundesland;
                foreach (var lastBundesland in lastBundeslaender)
                {
                    if (lastBundesland.BlAttribute.Bundesland == lb)
                    {
                        string vortag = lastBundesland.BlAttribute.FallzahlGesamt;
                        fallzahlVortag = Int32.Parse(fallzahl.Replace(".", "").Trim()) - Int32.Parse(vortag.Replace(".", "").Trim());
                        string vortag2 = lastBundesland.BlAttribute.Todesfaelle;
                        todesfaelleVortag = Int32.Parse(todesfaelle.Replace(".", "").Trim()) - Int32.Parse(vortag2.Replace(".", "").Trim());
                        inzidenz7TageVortag = lastBundesland.BlAttribute.Inzidenz7Tage;
                        lkArrayLast = lastBundesland.Landkreise;
                    }
                }
            }
            else
            {
                lastBundeslaender = bundeslaender;
            }

            inzidenzColor = rkiService.SetCaseColor(inzidenz7Tage, inzidenz7TageVortag);
            rWertColor = rkiService.SetCaseColor(rWert7Tage, rWert7TageVortag);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }

    private void GetLastReport()
    {
        lkArray = lkArrayLast;
        blStandAktuell = lastReport.Bericht.BlStandAktuell;
        stand = lastReport.Bericht.Stand;
    }

}

