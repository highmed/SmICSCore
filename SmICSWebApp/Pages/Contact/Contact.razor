@page "/contact"
@page "/contact/{PatientID}/{Pathogen}"

@using SmICSWebApp.Data.Contact
@using SmICSCoreLib.Factories.General

@inject ContactService _contactService

<div class="container-fluid">
    <div class="row">
        <div class="card">
            <div ="card-body">
                <EditForm Model="@contact" OnValidSubmit="@Submit">
                    <label for="patID">PatientID:</label>
                    <input type="text" @bind="contact.PatientID" id="patID" />
                    <label for="pathogen">Pathogen:</label>
                    <input type="text" id="pathogen" list="pathogenList" @bind="contact.Pathogen" @onchange="GetFilter"/>
                    <datalist id="pathogenList">
                        <option>Staphylococcus aureus</option>
                       
                    </datalist>
                    <label for="res">Resistenz:</label>
                    <input type="text" id="res" list="resistanceList" @bind="contact.Resistence"/>
                    <datalist id="resistanceList">
                        @foreach (string filter in _filterMRE)
                        {
                            <option value="@filter">@filter</option>
                        }
                    </datalist>
                    <button type="submit" class="btn btn-outline-primary"><i class="oi oi-magnifying-glass"></i></button>
                </EditForm>
            </div>
        </div>
    </div>
    @if (Loading)
    {
        <div class="spinner"></div>
    }
    else if (root != null && !Loading)
    {
    <div class="row">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-2">
                        <button type="button" class="btn btn-outline-light text-black" @onclick="GetPrevious"><i class="oi oi-chevron-left"></i> Vorheriger Fall</button>
                    </div>
                    <div class="col-8">
                        <h2 class="text-center">@contact.PatientID</h2>
                        <h4 class="text-center">Fall: @root.CurrentHospitalization.CaseID</h4>
                        <h4 class="text-center">Zeitraum: @root.CurrentHospitalization.Admission.Date.ToString("yyyy-MM-dd") - @(root.CurrentHospitalization.Discharge.Date.HasValue ? (root.CurrentHospitalization.Discharge.Date.Value.ToString("yyyy-MM-dd")) : null)</h4>
                    </div>
                    <div class="col-2">
                        @if (root.CurrentHospitalization != root.Hospitalizations.Last())
                        {
                            <button type="button" class="btn btn-outline-light text-black" @onclick="GetNext"><i class="oi oi-chevron-right"></i> Nächster Fall </button>
                        }
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-2"></div>
                    <div class="col-8">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th class="text-center">Kontaktpatient</th>
                                    <th class="text-center">Statusdatum</th>
                                    <th class="text-center">Raum</th>
                                    <th class="text-center">Station</th>
                                    <th class="text-center">Fachabteilung</th>
                                    <th class="text-center">Kontaktzeitraum</th>
                                </tr>
                            </thead>
                            <tbody>

                                @foreach (Data.Contact.Contact contact in root.Contacts[root.CurrentHospitalization])
                                {
                                    <tr>
                                        <td class="text-center">
                                            @if (contact.InfectionStatus.Values.Any(x => x.Nosocomial))
                                            {
                                                <span class="text-danger">@contact.PatientID</span>
                                            }
                                            else if (contact.InfectionStatus.Values.Any(x => x.Known))
                                            {
                                                <span class="text-primary">@contact.PatientID</span>
                                            }
                                            else
                                            {
                                                @contact.PatientID
                                            }
                                        </td>
                                        <td class="text-center">
                                            @if (contact.InfectionStatus.Values.Any(x => x.Nosocomial))
                                            {
                                                @contact.InfectionStatus.Values.Where(x => x.Nosocomial).Select(x => x.NosocomialDate).First().Value.ToString("yyyy-MM-dd")
                                            }
                                            else if (contact.InfectionStatus.Values.Any(x => x.Known))
                                            {

                                            }
                                        </td>
                                        <td class="text-center">
                                            @(contact.RoomContact ? contact.PatientLocation.Room : "")
                                        </td>
                                        <td>
                                            @(contact.WardContact ? contact.PatientLocation.Ward : "")
                                        </td>
                                        <td class="text-center">
                                            @(contact.DepartementContact ? contact.PatientLocation.Departement : "")
                                        </td>
                                        <td class="text-center">
                                            @contact.ContactStart.ToString("yyyy-MM-dd") - @(contact.ContactEnd.HasValue ? contact.ContactEnd.Value.ToString("yyyy-MM-dd") : "")
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="col-2"></div>
                </div>
            </div>
        </div>
    </div>

    }
</div>

@code {
    [Parameter]
    public ContactParameter contact { get; set; } = new ContactParameter();

    [Parameter]
    public string PatientID { get; set; }

    [Parameter]
    public string Pathogen { get; set; }

    [Parameter]
    public string Resistence { get; set; }

    private ContactRoot root = null;
    private bool Loading = false;

    private void Submit()
    {
        root = _contactService.LoadContactData(contact);
    }

    public override Task SetParametersAsync(ParameterView parameters)
    {
        parameters.TryGetValue("PatientID", out string ID);
        parameters.TryGetValue("Pathogen", out string patho);
        parameters.TryGetValue("Resistence", out string res);
        base.SetParametersAsync(parameters);

        return null;
    }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(PatientID))
        {
            contact.PatientID = PatientID;
            contact.Pathogen = Pathogen;
            contact.Resistence = Resistence;

            Loading = true;
            await Task.Run(Submit);
            Loading = false;

        }
        await base.OnInitializedAsync(); ;
    }

    private void GetPrevious()
    {
        _contactService.GetPreviousHospitalizationContacts(ref root, contact);
    }

    private void GetNext()
    {
        int index = root.Hospitalizations.IndexOf(root.CurrentHospitalization);
        root.CurrentHospitalization = root.Hospitalizations[index + 1];
    }

    private void GetFilter()
    {
        private List<string> _filterMRE;
}
}
