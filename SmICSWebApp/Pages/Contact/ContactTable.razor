<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th class="text-center">Kontaktpatient</th>
            <th class="text-center">Statusdatum</th>
            <th class="text-center">Raum <i class="oi oi-elevator" @onclick="() => Sort(p => p.Room)"></i></th>
            <th class="text-center">Station <i class="oi oi-elevator" @onclick="() => Sort(p => p.Ward)"></i></th>
            <th class="text-center">Fachabteilung <i class="oi oi-elevator" @onclick="() => Sort(p => p.Departement)"></i></th>
            <th class="text-center">Kontaktzeitraum <i class="oi oi-elevator" @onclick="() => Sort(p => p.ContactStart)"></i></th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>

        @foreach (Data.Contact.ContactDetails contact in Contacts)
        {
        <tr>
            <td class="text-center">
                @if (contact.IsNosocomial)
                {
                    <span class="text-danger">@contact.PatientID</span>
                }
                else if (contact.IsKnown)
                {
                    <span class="text-primary">@contact.PatientID</span>
                }
                else
                {
                    @contact.PatientID
                }
            </td>
            <td class="text-center">
                @contact.StatusDate
            </td>
            <td class="text-center">
                @contact.Room
            </td>
            <td>
                @contact.Ward
            </td>
            <td class="text-center">
                @contact.Departement
            </td>
            <td class="text-center">
                @contact.ContactStart - @contact.ContactEnd
            </td>
            <td>
                @if (contact.IsPresent)
                {
                    <svg class="p-0" width="30px" height="30px">
                        <circle cx="15" cy="15" r="10" stroke="black" stroke-width="0.5" fill="#006400" />
                    </svg>
                }
            </td>
        </tr>
        }
    </tbody>
</table>

@code {
    [Parameter]
    public List<Data.Contact.ContactDetails> Contacts { get; set; }


    private Func<Data.Contact.ContactDetails, IComparable> Prop;
    private bool IsMinSorted = false;

    private void Sort(Func<Data.Contact.ContactDetails, IComparable> getProp)
    {
        if (Contacts != null && Contacts.Count > 0 && (Prop != getProp || !(Prop == getProp && IsMinSorted)))
        {
            Prop = getProp;
            IsMinSorted = true;
            Contacts = Contacts
            .OrderBy(x => getProp(x))
            .ToList();
        }
        else
        {
            IsMinSorted = false;
            Contacts = Contacts
            .OrderByDescending(x => getProp(x))
            .ToList();
        }
    }
}
