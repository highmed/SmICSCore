@page "/region"

@using SmICSCoreLib.StatistikDataModels
@using SmICSCoreLib.StatistikServices
@using System.ComponentModel.DataAnnotations
@using System
@using ChartJs.Blazor.LineChart

@inject RkiRestApi rkiRestApi

<h3>Statistik (Prototyp)</h3>

<div class="card">
    <div class="row">
        <StatistikNav>
        </StatistikNav>

        <div class="card-body col-10">
            <div style="padding: 0px 0px 100px 0px;">
                @if (lkArray == null)
                {
                    @if (status == true)
                    {
                        <p><em>Daten werden geladen...</em></p>
                        <div class="spinner"></div> }
                    else
                    {
                        <p><em>Es stehen momentan leider keine Daten zu Verfügung!</em></p>
                        <p><em>Versuchen Sie bitte später diese Seite aufzurufen!</em></p>
                    }
                }
                else
                {
                    <div class="row">
                        <div class="col-5">
                            <div class="card flex-fill">
                                <div class="card-header" style="padding-top: 10px;">
                                    <h5 class="card-title">Vergleich Region-Bundesland</h5>
                                    <EditForm Model="@data">
                                        <div style="display: inline-flex; ">
                                            <div>
                                                <label>Bundesland: </label>
                                                <InputSelect @bind-Value="data.bl" @onclick="@OnValueBl">
                                                    @foreach (var item in bundeslaender)
                                                        {
                                                        <option value="@item.BlAttribute.Bundesland"> @item.BlAttribute.Bundesland</option>}
                                                    }
                                                </InputSelect>
                                            </div>

                                            <div>
                                                <label>Region: </label>
                                                <InputSelect @bind-Value="data.gen" @onclick="@OnValueGen">
                                                    @foreach (var item in @lkArray)
                                                        {
                                                        <option value="@item.Stadt">
                                                            @item.Stadt
                                                        </option>
                                                        }
                                                </InputSelect>
                                            </div>
                                        </div>
                                    </EditForm>
                                </div>
                                <div class="card-body">
                                    <p> Stand @stand</p>
                                    <div class="table-wrapper-scroll-y my-custom-scrollbar">
                                        <table class="table table-bordered table-hover mb-0">
                                            <thead style="background-color: #7FBDD2;">
                                                <tr>
                                                    <th scope="col">Daten</th>
                                                    <th scope="col">@landkreis.Stadt</th>
                                                    <th scope="col">@bundesland.BlAttribute.Bundesland</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <th scope="row">Fallzahl</th>
                                                    <td>@landkreis.FallzahlGesamt</td>
                                                    <td>@bundesland.BlAttribute.FallzahlGesamt</td>
                                                </tr>
                                                <tr>
                                                    <th scope="row">Fallzahl pro 100.000 Einwohner</th>
                                                    <td>@landkreis.FaellePro100000Ew </td>
                                                    <td>@bundesland.BlAttribute.FaellePro100000Ew</td>
                                                </tr>

                                                <tr>
                                                    <th scope="row">Fälle in der letzten 7 Tage</th>
                                                    <td>@landkreis.Faelle7Lk</td>
                                                    <td>@bundesland.BlAttribute.Faelle7BL</td>
                                                </tr>
                                                <tr>
                                                    <th scope="row">7-Tage-Inzidenz</th>
                                                    <td>@landkreis.Inzidenz7Tage</td>
                                                    <td>@bundesland.BlAttribute.Inzidenz7Tage</td>
                                                </tr>
                                                <tr>
                                                    <th scope="row">7-Tage-R-Wert</th>
                                                    <td> @rValue</td>
                                                    <td> @rValue</td>
                                                </tr>
                                                <tr>
                                                    <th scope="row">Verstorben</th>
                                                    <td>@landkreis.Todesfaelle</td>
                                                    <td>@bundesland.BlAttribute.Todesfaelle</td>
                                                </tr>
                                                <tr>
                                                    <th scope="row">Verstorben der letzten 7 Tage</th>
                                                    <td>@landkreis.Todesfaelle7Lk</td>
                                                    <td>@bundesland.BlAttribute.Todesfaelle7BL</td>
                                                </tr>
                                                <tr>
                                                    <th scope="row">Genesen</th>
                                                    <td>.k.A</td>
                                                    <td>.k.A</td>
                                                </tr>
                                                @*<tr>
                                                <th scope="row">Nicht genesen</th>
                                                <td> .k.A </td>
                                                <td> .k.A</td>
                                            </tr>*@
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-7">
                            <div class="card flex-fill">
                                <Chart Config="_config"></Chart>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    StatistikData data = new StatistikData();
    private DailyReport dailyReport = new();
    private Bundesland[] bundeslaender = new Bundesland[16];
    private Landkreis[] lkArray;
    private Bundesland bundesland = new();
    private Landkreis landkreis = new();
    private string stand;
    private string rValue = "";
    private bool status;
    private Dictionary<string, int> rkiDatenBl;
    private Dictionary<string, int> rkiDatenLk;
    private int anzahlFaelle;
    private int anzahlPatTage;

    private LineConfig _config;
    private Chart _chart;

    protected override async Task OnInitializedAsync()
    {
        status = true;
        data.bl = "Baden-Württemberg";
        data.gen = "Stuttgart";
        await Task.Run(LoadRValue);
        await Task.Run(LoadRkiData);

        GetDataForChart();
        GetChart();
    }

    private void LoadRkiData()
    {
        try
        {
            dailyReport = rkiRestApi.DeserializeRkiData(DateTime.Now);
            if (dailyReport != null)
            {
                stand = dailyReport.Bericht.Stand;
                bundeslaender = dailyReport.Bericht.Bundesland;
                foreach (var item in bundeslaender)
                {
                    if (item.BlAttribute.Bundesland == "Baden-Württemberg")
                    {
                        bundesland = item;
                        lkArray = item.Landkreise;
                        landkreis = lkArray.First();
                    }
                }
            }
            else
            {
                rkiRestApi.SerializeRkiData();
                dailyReport = rkiRestApi.DeserializeRkiData(DateTime.Now);
                if (dailyReport != null)
                {
                    stand = dailyReport.Bericht.Stand;
                    bundeslaender = dailyReport.Bericht.Bundesland;
                    foreach (var item in bundeslaender)
                    {
                        if (item.BlAttribute.Bundesland == "Baden-Württemberg")
                        {
                            bundesland = item;
                            lkArray = item.Landkreise;
                            landkreis = lkArray.First();
                        }
                    }
                }
            }
        }
        catch (Exception)
        {
            bundeslaender = null;
            bundesland = null;
            lkArray = null;
            landkreis = null;
            status = false;
        }
    }

    private void LoadRValue()
    {
        rValue = rkiRestApi.GetRValue(2).Replace(",", ".");
        if (rValue == null)
        {
            rValue = ".k.A";
        }
    }

    private void OnValueBl()
    {
        foreach (var item in bundeslaender)
        {
            if (item.BlAttribute.Bundesland == data.bl)
            {
                bundesland = item;
                lkArray = item.Landkreise;
                landkreis = lkArray.First();
            }
        }
    }

    private void OnValueGen()
    {
        foreach (var item in lkArray)
        {
            if (item.Stadt == data.gen)
            {
                landkreis = item;
            }
        }
    }

    private class StatistikData
    {
        [Required]
        public string bl { get; set; }

        [Required]
        public string gen { get; set; }
    }



    private void GetDataForChart()
    {

        rkiDatenBl = rkiRestApi.GetDatas("https://www.rki.de/DE/Content/InfAZ/N/Neuartiges_Coronavirus/Daten/Fallzahlen_Kum_Tab.xlsx?__blob=publicationFile", 1, 366, 2, 2, 11);
        rkiDatenLk = rkiRestApi.GetDatas("https://www.rki.de/DE/Content/InfAZ/N/Neuartiges_Coronavirus/Daten/Fallzahlen_Kum_Tab.xlsx?__blob=publicationFile", 5, 172, 4, 4, 150);

        foreach (var itemBl in rkiDatenBl)
        {
            if (!rkiDatenLk.ContainsKey(itemBl.Key))
            {
                rkiDatenBl.Remove(itemBl.Key);
            }
        }


    }

    protected void GetChart()
    {
        _config = new LineConfig
        {
            Options = new LineOptions
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Entwicklung der 7-Tage-Fallzahlen in Nidersachsen"
                },
                Tooltips = new Tooltips
                {
                    Mode = InteractionMode.Nearest,
                    Intersect = true
                },
                Hover = new Hover
                {
                    Mode = InteractionMode.Nearest,
                    Intersect = true
                },
                Scales = new Scales
                {
                    XAxes = new List<CartesianAxis>
                {
                            new CategoryAxis
                            {
                                 ScaleLabel = new ScaleLabel
                                {
                                    LabelString = "Datum"
                                }
                            }
                        },
                    YAxes = new List<CartesianAxis>
                 {
                            new LinearCartesianAxis
                            {
                                Ticks = new LinearCartesianTicks
                                {
                                    BeginAtZero = true
                                }
                            }
                     }
                }
            }
        };

        foreach (string datum in rkiDatenBl.Keys)
        {
            _config.Data.Labels.Add(datum);
        }


        IDataset<int> ndrDataset = new LineDataset<int>(rkiDatenBl.Values)
        {
            Label = "Nidersachsen-Fallzahlen",
            BackgroundColor = "#4AA0CA",
            BorderColor = "#7FBDD2",
            Fill = FillingMode.Disabled
        };

        IDataset<int> hhDataset = new LineDataset<int>(rkiDatenLk.Values)
        {
            Label = "Region Hannover-Fallzahlen",
            BackgroundColor = "#F35C58",
            BorderColor = "#F35C58",
            Fill = FillingMode.Disabled
        };

        _config.Data.Datasets.Add(ndrDataset);
        _config.Data.Datasets.Add(hhDataset);

    }

}