@page "/wardoverview"

@using ChartJs.Blazor.BarChart
@using ChartJs.Blazor.BarChart.Axes
@using ChartJs.Blazor.Common.Axes
@using ChartJs.Blazor.Common
@using ChartJs.Blazor.Common.Enums
@using ChartJs.Blazor.Util

@using SmICSCoreLib.Factories.PatientMovementNew.PatientStays
@using SmICSWebApp.Data.WardView

@inject WardOverviewService _service

<div class="card">
    <div class="card-body">
        <EditForm Model="@parameter" OnValidSubmit="@Submit">
            <label for="stationDropdown" class="mr-1">Station</label>
            <select id="stationDropdow" class="col-2 mr-2" @bind="@parameter.Ward">
                <option>Station 1</option>
                <option>Station 2</option>
                <option>Station 3</option>
                <option>47</option>
            </select>
            <label for="pathogenDropdown" class="mr-1">Erreger</label>
            <select id="pathogenDropdown" class="col-1 mr-2" @bind="@parameter.Pathogen">
                <option>MRSA</option>
                <option>3 MRGN</option>
                <option>4 MRGN</option>
                <option>VRE </option>
            </select>
            <label for="startdate" class="mr-1">Start</label>
            <InputDate id="startdate" class="col-1 mr-2" @bind-Value="parameter.Start" />
            <label for="enddate" class="mr-1">Ende</label>
            <InputDate id="enddate" class="col-1 mr-2" @bind-Value="parameter.End" />
            <button type="submit" class="btn btn-outline-primary"><i class="oi oi-magnifying-glass"></i></button>

        </EditForm>
    </div>
</div>

@if (data != null)
{
            
    <div class="row">
        <div class="card w-50">
            <div class="card-body">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th class="text-center">Patient</th>
                            @if (HasPatientData())
                            {
                                <th>Name</th>
                                <th>Geburtstag</th>
                                <th>Sex</th>
                            }
                            <th class="text-center">letzer Stationstest</th>
                            <th class="text-center">1.Stationstest</th>
                            <th class="text-center">Aktueller Test</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (WardOverview item in data)
                        {
                            <tr>
                                <td class="text-center">

                                    <ContextMenu Id="@item.PatientStay.PatientID">
                                        <Item OnClick="@OnContextClick"><a href="/patient/@(item.PatientStay.PatientID)">Patientenansicht</a></Item>
                                        <Item OnClick="@OnContextClick"><a href="/contact/@(item.PatientStay.PatientID)"> Kontakte </a> </Item>
                                    </ContextMenu>

                                    <ContextMenuTrigger MenuId="@item.PatientStay.PatientID">
                                        @if(@item.InfectionStatus.Nosocomial)
                                        {
                                            <span class="text-danger"></span>     
                                        }
                                        else if (@item.InfectionStatus.Known){
                                            <span class="text-warning"></span>     
                                        }
                                        else{
                                            @item.PatientStay.PatientID
                                        }
                                    </ContextMenuTrigger>
                                </td>
                                @if (item.PatientData != null)
                                {
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                }
                                <td class="text-center">@item.</td>
                                <td class="text-center">@item.LabData.Nosokomial</td>
                                <td class="text-center">@item.LabData.Last()</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="card w-50">
        <div class="card-body">
            <Chart Config="_chart"></Chart>
        </div>
    </div>
}
 


@code {
    private WardParameter parameter = new WardParameter();

    private List<WardOverview> data = null;

    private BarConfig _chart;

    private bool isLoading = false;
    private void Submit()
    {
         isLoading = true;
         data = _service.GetData(parameter);

        _chart = new BarConfig
        {
            Options = new BarOptions
            {
                Responsive = true,
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Epidemiologische Kurve der Station: " + parameter.Ward
                },
                Scales = new BarScales
                {
                    XAxes = new List<CartesianAxis>
                {
                        new BarCategoryAxis
                        {
                            Stacked = true
                        }
                    },
                    YAxes = new List<CartesianAxis>
                {
                        new BarLinearCartesianAxis
                        {
                            Stacked = true
                        }
                    }
                },
                Tooltips = new Tooltips
                {
                    Mode = InteractionMode.Index,
                    Intersect = false
                },
            }
        };

        IDataset<int> Nosocomial = new BarDataset<int>()
        {
            Label = "Nosokomial",
            BackgroundColor = ColorUtil.FromDrawingColor(System.Drawing.Color.Red)
        };

        IDataset<int> Known = new BarDataset<int>()
        {
            Label = "Bekannt",
            BackgroundColor = ColorUtil.FromDrawingColor(System.Drawing.Color.Yellow)
        };
        GetXAxisLabels();
        _chart.Data.Datasets.Add(Nosocomial);
        _chart.Data.Datasets.Add(Known);
    }

    private void GetXAxisLabels()
    {
        for (DateTime date = parameter.Start.Date; date <= parameter.End.Date; date = date.AddDays(1.0))
        {
            _chart.Data.Labels.Add(date.ToString("dd.MM"));
        }
    }
}
