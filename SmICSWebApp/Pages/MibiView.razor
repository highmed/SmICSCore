@page "/MiBi"

@using SmICSCoreLib.AQL.MiBi.WardOverview
@using Data


@inject MibiViewService _service

<h3>MibiView</h3>

<div class="row">
    <label for="stationDropdown">Station</label>
    <select id="stationDropdow">
        <option>Station 1</option>
        <option>Station 2</option>
        <option>Station 3</option>
        <option>Station 4</option>
    </select>
    <label for="pathogenDropdown">Erreger</label>
    <select id="pathogenDropdown">
        <option>MRSA</option>
        <option>3 MRGN</option>
        <option>4 MRGN</option>
        <option>VRE </option>
    </select>
    <label for="startdate">Start</label>
    <InputDate id="startdate" Value="DateTime.Now" />
    <label for="enddate">Ende</label>
    <InputDate id="enddate" Value="DateTime.Now" />
    <button type="button" @onclick="Click">Suche</button>
</div>

@if (data != null)
{
    <div>
        <table>
            <thead>
                <th>Patient</th>
                @if (HasPatientData())
                {
                    <th>Name</th>
                    <th>Geburtstag</th>
                    <th>Sex</th>
                }
                <th>Stationstest</th>
                <th>Nosokomial</th>
                <th>TestDatum</th>
            </thead>
            <tbody>
                @foreach(MibiViewModel item in data)
                {
                    <td>@item.LabData.PatientID</td>
                    @if (item.PatientData != null)
                    {
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                     }
                    <td>@item.LabData.OnWard</td>
                    <td>@item.LabData.Nosokomial</td>
                    <td>@item.LabData.TestDate</td>
                }
            </tbody>
        </table>
    </div>
    <div>
        EpiKurve
        <MudChart ChartType="ChartType.Bar" ChartSeries="@Series" XAxisLabels="@XAxisLabels" Width="100%" Height="350px"></MudChart>
    </div>
}

@code {

    private List<MibiViewModel> data { get; set; } = null;

    private string PathogenParam { get; set; }
    private string WardParam { get; set; }
    private DateTime StartDateParam { get; set; }
    private DateTime EndDateParam { get; set; }

    private List<ChartSeries> Series { get; set; }
    private string[] XAxisLabels { get; set; }
    private void Click()
    {
        WardOverviewParameters parameter = new WardOverviewParameters();
        parameter.MRE = PathogenParam;
        parameter.Ward = WardParam;
        parameter.Start = StartDateParam;
        parameter.End = EndDateParam;

        data = _service.GetData(parameter);

        Series = GetEpicurveData();
        XAxisLabels = GetXAxisLabels();
    }

    private bool HasPatientData()
    {
        foreach(MibiViewModel vm in data)
        {
            if (vm.PatientData != null)
            {
                return true;
            }
        }
        return false;
    }

    private List<ChartSeries> GetEpicurveData()
    {
        List<ChartSeries> charts = new List<ChartSeries>();
        Dictionary<string, SortedDictionary<DateTime, double>> chartEntries = new Dictionary<string, SortedDictionary<DateTime, double>>();

        chartEntries.Add("NosokomialOnWard", new SortedDictionary<DateTime, double>());
        chartEntries.Add("NosokomialOtherWard", new SortedDictionary<DateTime, double>());
        chartEntries.Add("Known", new SortedDictionary<DateTime, double>());


        for (DateTime date = StartDateParam.Date; date <= EndDateParam.Date; date.AddDays(1.0))
        {
            chartEntries["NosokomialOnWard"].Add(date, 0);
            chartEntries["NosokomialOtherWard"].Add(date, 0);
            chartEntries["Known"].Add(date, 0);
        }

        foreach (MibiViewModel mv in data.OrderBy(x => x.LabData.TestDate))
        {
            if(mv.LabData.Nosokomial && mv.LabData.OnWard)
            {
                chartEntries["NosokomialOnWard"][mv.LabData.TestDate.Date] += 1;
            }
            else if (mv.LabData.Nosokomial && !mv.LabData.OnWard)
            {
                chartEntries["NosokomialOtherWard"][mv.LabData.TestDate.Date] += 1;
            }
            else if (!mv.LabData.NewCase)
            {
                chartEntries["Known"][mv.LabData.TestDate.Date] += 1;
            }
        }

        charts.Add(new ChartSeries { Name= "Known", Data = chartEntries["Known"].Values.ToArray<double>() });
        charts.Add(new ChartSeries { Name= "NosokomialOtherWard", Data = chartEntries["NosokomialOtherWard"].Values.ToArray<double>() });
        charts.Add(new ChartSeries { Name= "NosokomialOnWard", Data = chartEntries["NosokomialOnWard"].Values.ToArray<double>() });

        return charts;
    }

    private string[] GetXAxisLabels()
    {
        List<string> labels = new List<string>();
        for (DateTime date = StartDateParam.Date; date <= EndDateParam.Date; date.AddDays(1.0))
        {
            labels.Add(date.ToString("M"));
        }
        return labels.ToArray();
    }
}
