[
  {
    "WorkflowName": "Resistance",
    "Rules": [
      {
        "RuleName": "MRSA",
        "SuccessEvent": "MRSA",
        "ErrorMessage": "One or more adjust rules failed.",
        "ErrorType": "Error",
        "RuleExpressionType": "LambdaExpression",
        "Expression": "input.Name == \"Staphylococcus aureus\" && input.Antibiograms.Any(antibiotigram => antibiotigram.Antibiotic == \"Oxacillin\" && antibiotigram.Resistance == \"R\")"
      },
      {
        "RuleName": "MSSA",
        "SuccessEvent": "MSSA",
        "ErrorMessage": "One or more adjust rules failed.",
        "ErrorType": "Error",
        "RuleExpressionType": "LambdaExpression",
        "Expression": "input.Name == \"Staphylococcus aureus\" && input.Antibiograms.Any(antibiotigram => antibiotigram.Antibiotic == \"Oxacillin\" && antibiotigram.Resistance == \"S\")"
      },
      {
        "RuleName": "3MRGN (Enterobacterales + Acinetobacter baumanmii)",
        "SuccessEvent": "3MRGN",
        "ErrorMessage": "One or more adjust rules failed.",
        "ErrorType": "Error",
        "RuleExpressionType": "LambdaExpression",
        "Expression": "(input.Name == \"Escherichia coli\" || input.Name == \"Acinetobacter baumannii\" || input.Name == \"Klebsiella pneumoniae\") && input.Antibiograms.Any(antibiotigram => (antibiotigram.Antibiotic == \"Piperacillin\" && antibiotigram.Resistance == \"R\") && (antibiotigram.Antibiotic == \"Cefotaxim\" || antibiotigram.Antibiotic == \"Ceftazidim\" && antibiotigram.Resistance == \"R\") && (antibiotigram.Antibiotic == \"Imipenem\" || antibiotigram.Antibiotic == \"Meropenem\" && antibiotigram.Resistance == \"S\" || antibiotigram.Resistance == \"I\") && (antibiotigram.Antibiotic == \"Ciprofloxacin\" && antibiotigram.Resistance == \"R\"))"
      },
      {
        "RuleName": "4MRGN (Enterobacterales + Acinetobacter baumanmii + Pseudomonas aeruginosa A)",
        "SuccessEvent": "4MRGN",
        "ErrorMessage": "One or more adjust rules failed.",
        "ErrorType": "Error",
        "RuleExpressionType": "LambdaExpression",
        "Expression": "(input.Name == \"Escherichia coli\" || input.Name == \"Acinetobacter baumannii\" || input.Name == \"Pseudomonas aeruginosa\" || input.Name == \"Klebsiella pneumoniae\") && input.Antibiograms.Any(antibiotigram => (antibiotigram.Antibiotic == \"Piperacillin\" && antibiotigram.Resistance == \"R\") && (antibiotigram.Antibiotic == \"Cefotaxim\" || antibiotigram.Antibiotic == \"Ceftazidim\" && antibiotigram.Resistance == \"R\") && (antibiotigram.Antibiotic == \"Imipenem\" || antibiotigram.Antibiotic == \"Meropenem\" && antibiotigram.Resistance == \"R\") && (antibiotigram.Antibiotic == \"Ciprofloxacin\" && antibiotigram.Resistance == \"R\"))"
      },
      {
        "RuleName": "3MRGN (Pseudomonas aeruginosa)",
        "SuccessEvent": "3MRGN",
        "ErrorMessage": "One or more adjust rules failed.",
        "ErrorType": "Error",
        "RuleExpressionType": "LambdaExpression",
        "Expression": "(input.Name == \"Pseudomonas aeruginosa\" && input.Antibiograms.Count((antibiotigram => (antibiotigram.Antibiotic == \"Piperacillin\" == \"R\") || (antibiotigram.Antibiotic == \"Cefotaxim\" || antibiotigram.Antibiotic == \"Ceftazidim\" && antibiotigram.Resistance == \"R\") && (antibiotigram.Antibiotic == \"Imipenem\" || antibiotigram.Antibiotic == \"Meropenem\" && antibiotigram.Resistance == \"R\" ) && (antibiotigram.Antibiotic == \"Ciprofloxacin\" && antibiotigram.Resistance == \"R\") == 3)"
      }
    ]
  },
  {
    "WorkflowName": "MREClassByPathogen",
    "Rules": [
      {
        "RuleName": "MRSA",
        "SuccessEvent": "MRSA",
        "ErrorMessage": "One or more adjust rules failed.",
        "ErrorType": "Error",
        "RuleExpressionType": "LambdaExpression",
        "Expression": "input.Any(code => code==\"sau\")"
      },
      {
        "RuleName": "MSSA",
        "SuccessEvent": "MSSA",
        "ErrorMessage": "One or more adjust rules failed.",
        "ErrorType": "Error",
        "RuleExpressionType": "LambdaExpression",
        "Expression": "input.Any(code => code==\"sau\")"
      },
      {
        "RuleName": "3MRGN-kpn",
        "SuccessEvent": "3MRGN",
        "ErrorMessage": "One or more adjust rules failed.",
        "ErrorType": "Error",
        "RuleExpressionType": "LambdaExpression",
        "Expression": "input.Any(code => code==\"kpn\")"
      },
      {
        "RuleName": "4MRGN-kpn",
        "SuccessEvent": "4MRGN",
        "ErrorMessage": "One or more adjust rules failed.",
        "ErrorType": "Error",
        "RuleExpressionType": "LambdaExpression",
        "Expression": "input.Any(code => code==\"kpn\")"
      },
      {
        "RuleName": "3MRGN-eco",
        "SuccessEvent": "3MRGN",
        "ErrorMessage": "One or more adjust rules failed.",
        "ErrorType": "Error",
        "RuleExpressionType": "LambdaExpression",
        "Expression": "input.Any(code => code==\"eco\")"
      },
      {
        "RuleName": "4MRGN-eco",
        "SuccessEvent": "4MRGN",
        "ErrorMessage": "One or more adjust rules failed.",
        "ErrorType": "Error",
        "RuleExpressionType": "LambdaExpression",
        "Expression": "input.Any(code => code==\"eco\")"
      },
      {
        "RuleName": "3MRGN-aba",
        "SuccessEvent": "3MRGN",
        "ErrorMessage": "One or more adjust rules failed.",
        "ErrorType": "Error",
        "RuleExpressionType": "LambdaExpression",
        "Expression": "input.Any(code => code==\"aba\")"
      },
      {
        "RuleName": "4MRGN-aba",
        "SuccessEvent": "4MRGN",
        "ErrorMessage": "One or more adjust rules failed.",
        "ErrorType": "Error",
        "RuleExpressionType": "LambdaExpression",
        "Expression": "input.Any(code => code==\"aba\")"
      },
      {
        "RuleName": "3MRGN-pae",
        "SuccessEvent": "3MRGN",
        "ErrorMessage": "One or more adjust rules failed.",
        "ErrorType": "Error",
        "RuleExpressionType": "LambdaExpression",
        "Expression": "input.Any(code => code==\"pae\")"
      },
      {
        "RuleName": "4MRGN-pae",
        "SuccessEvent": "4MRGN",
        "ErrorMessage": "One or more adjust rules failed.",
        "ErrorType": "Error",
        "RuleExpressionType": "LambdaExpression",
        "Expression": "input.Any(code => code==\"pae\")"
      }
    ]
  }
]