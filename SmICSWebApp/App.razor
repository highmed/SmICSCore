@using SmICSCoreLib.Authentication
@inject TokenProvider ApplicationState
@inject NavigationManager NavManager

<Router AppAssembly="@typeof(Program).Assembly">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
            <Authorizing>
                <p>Determing session state, please wait...</p>
            </Authorizing>
            <NotAuthorized>
                <h2>Sorry</h2>
                <p>You are not authorized to reach this page. You need to log in.</p>
                @{ NavManager.NavigateTo("/Logout", true); }
            </NotAuthorized>
        </AuthorizeRouteView>
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(MainLayout)">
            <p>Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code {
    [Parameter]
    public TokenProvider InitialState { get; set; }

    protected override Task OnInitializedAsync()
    {
        ApplicationState.AccessToken = InitialState.AccessToken;
        ApplicationState.RefreshToken = InitialState.RefreshToken;

        return base.OnInitializedAsync();
    }
}